{"version":3,"sources":["components/Todo.js","components/TodoForm.js","components/TodoList.js","components/SideBar.js","App.js","index.js"],"names":["Todo","id","this","props","task","onDoubleClick","doubleClick","className","completed","React","Component","Form","styled","form","TodoForm","onSubmit","addTask","type","value","newTask","onChange","changeHandler","placeholder","onClick","clearCompleted","TodoList","searchString","length","selectedList","deleteList","tasks","map","key","doubleClickTask","Sidebar","div","SideBar","htmlFor","document","querySelector","click","icon","searchInputChange","showAllTasks","newList","tasksLists","list","index","selectList","savedTasks","localStorage","getItem","JSON","parse","App","e","setState","state","target","preventDefault","toLowerCase","setItem","stringify","Date","now","classList","toggle","targetId","Number","Object","entries","forEach","filter","selected","textContent","searchResults","allTasks","push","name","prompt","getTasksLists","getSearchResults","newResults","includes","componentDidUpdate","prevProps","prevState","newTasksList","stringArray","split","string","toUpperCase","slice","join","library","add","fab","fas","ReactDOM","render","getElementById"],"mappings":"mUAGqBA,G,uLAEb,OACI,wBAAIC,GAAIC,KAAKC,MAAMC,KAAKH,GAAII,cAAeH,KAAKC,MAAMG,YAAaC,UAAWL,KAAKC,MAAMC,KAAKI,UAAY,YAAc,MAAON,KAAKC,MAAMC,KAAKA,U,GAHzHK,IAAMC,Y,gjBCAxC,IAAMC,EAAOC,IAAOC,KAAV,KAgCWC,E,iLAGb,OACI,kBAACH,EAAD,CAAMI,SAAUb,KAAKC,MAAMa,SACvB,2BACIf,GAAG,OACHgB,KAAK,OACLC,MAAOhB,KAAKC,MAAMgB,QAAQf,KAC1BgB,SAAUlB,KAAKC,MAAMkB,cACrBC,YAAY,mBAGf,IAAI,4BAAQL,KAAK,UAAb,KAAiC,IACtC,4BAAQM,QAASrB,KAAKC,MAAMqB,gBAA5B,wB,GAdsBf,IAAMC,WC7BvBe,E,iLACP,IAAD,OACL,OACI,yBAAKlB,UAAU,YAEVL,KAAKC,MAAMuB,aAAaC,OAAS,EAAI,6CAAmBzB,KAAKC,MAAMuB,aAA9B,KAAoD,KAE1F,yBAAKnB,UAAU,gBACX,sCAC6B,KAA5BL,KAAKC,MAAMyB,aACR,kBAAC,EAAD,CACIT,QAASjB,KAAKC,MAAMgB,QACpBE,cAAenB,KAAKC,MAAMkB,cAC1BL,QAASd,KAAKC,MAAMa,QACpBQ,eAAgBtB,KAAKC,MAAMqB,iBAC1B,MAIb,4BACiC,KAA5BtB,KAAKC,MAAMyB,aAAsB1B,KAAKC,MAAMyB,aAAe,YADhE,IAEiC,KAA5B1B,KAAKC,MAAMyB,aAAsB,4BAAQL,QAASrB,KAAKC,MAAM0B,YAA5B,eAA+D,MAGpG3B,KAAKC,MAAM2B,MAAQ5B,KAAKC,MAAM2B,MAAMC,KAAI,SAAA3B,GAAI,OACzC,kBAAC,EAAD,CACI4B,IAAK5B,EAAKH,GACVG,KAAMA,EACNE,YAAa,EAAKH,MAAM8B,qBAE3B,U,GA9BiBxB,IAAMC,W,0tDCF5C,IAAMwB,EAAUtB,IAAOuB,IAAV,KA2GQC,E,iLACP,IAAD,OACL,OACI,kBAACF,EAAD,KACI,yCAEA,yBAAK3B,UAAU,mBACX,2BAAO8B,QAAQ,SAASd,QAAS,kBAAMe,SAASC,cAAc,WAAWC,UAErE,kBAAC,IAAD,CAAiBC,KAAK,WAAY,IAClC,2BAAOxC,GAAG,SAASgB,KAAK,OAAOC,MAAOhB,KAAKC,MAAMuB,aAAcJ,YAAY,SAASF,SAAUlB,KAAKC,MAAMuC,sBAIjH,4BAAQnC,UAAU,UAAUgB,QAASrB,KAAKC,MAAMwC,cAAhD,cAEA,yBAAKpC,UAAU,SACX,4CAAiB,4BAAQgB,QAASrB,KAAKC,MAAMyC,SAAS,kBAAC,IAAD,CAAiBH,KAAK,WAC3EvC,KAAKC,MAAM0C,WAAWd,KAAI,SAACe,EAAMC,GAAP,OACvB,wBAAIf,IAAKe,EAAOxB,QAAS,EAAKpB,MAAM6C,YAC/BF,Y,GApBQrC,IAAMC,WC1GrCuC,EAAaC,aAAaC,QAAQ,SAAWC,KAAKC,MAAMH,aAAaC,QAAQ,UAAY,KAiNhFG,E,YA3Mb,aAAe,IAAD,8BACZ,+CAeFjC,cAAgB,SAAAkC,GACd,EAAKC,SAAS,CACZrC,QAAQ,eACJ,EAAKsC,MAAMtC,QADR,CAELf,KAAMmD,EAAEG,OAAOxC,WApBP,EAyBdF,QAAU,SAAAuC,GACRA,EAAEI,iBAE6B,KAA5B,EAAKF,MAAMtC,QAAQf,MAEW,KAA5B,EAAKqD,MAAM7B,eACZ,EAAK4B,SAAS,CACZ1B,MAAM,eAED,EAAK2B,MAAM3B,MAFX,eAGF,EAAK2B,MAAM7B,aAAagC,cAHtB,sBAIC,EAAKH,MAAM3B,MAAM,EAAK2B,MAAM7B,aAAagC,gBAJ1C,CAI0D,EAAKH,MAAMtC,cAEzE,kBAAM+B,aAAaW,QAAQ,QAAST,KAAKU,UAAU,EAAKL,MAAM3B,WAEjE,EAAK0B,SAAS,CAACrC,QAAS,CACtBf,KAAM,GACNH,GAAI8D,KAAKC,MACTxD,WAAW,OA3CL,EAiDdyB,gBAAkB,SAAAsB,GAEhBA,EAAEG,OAAOO,UAAUC,OAAO,aAK1B,IAHA,IAAMC,EAAWC,OAAOb,EAAEG,OAAOzD,IAGjC,MAAsBoE,OAAOC,QAAQ,EAAKb,MAAM3B,OAAhD,eAAwD,wBAChDyC,SAAQ,SAAAnE,GACTA,EAAKH,KAAOkE,IACb/D,EAAKI,WAAaJ,EAAKI,cAK7B0C,aAAaW,QAAQ,QAAST,KAAKU,UAAU,EAAKL,MAAM3B,SAhE5C,EAoEdN,eAAiB,SAAA+B,GACfA,EAAEI,iBAEF,EAAKH,SAAS,CACZ1B,MAAM,eACC,EAAK2B,MAAM3B,MADb,eAEA,EAAK2B,MAAM7B,aAAagC,cACzB,EAAKH,MAAM3B,MAAM,EAAK2B,MAAM7B,aAAagC,eAAeY,QAAO,SAAApE,GAAI,OAAKA,EAAKI,iBAEhF,kBAAM0C,aAAaW,QAAQ,QAAST,KAAKU,UAAU,EAAKL,MAAM3B,YA7ErD,EAgFdY,kBAAoB,SAAAa,GAClB,EAAKC,SAAS,CAAC9B,aAAc6B,EAAEG,OAAOxC,QACtC,EAAKyB,gBAlFO,EAqFdK,WAAa,SAAAO,GACX,IAAMkB,EAAWlB,EAAEG,OAAOgB,YAC1B,EAAKlB,SAAS,CAAC5B,aAAc6C,IAC7B,EAAKjB,SAAS,CAACmB,cAAe,EAAKlB,MAAM3B,MAAM2C,EAASb,kBAxF5C,EA2FdjB,aAAe,WAGb,IAFA,IAAMiC,EAAW,GAEjB,MAAkBP,OAAOC,QAAQ,EAAKb,MAAM3B,OAA5C,eAAoD,CAAC,IAA3CE,EAA0C,uBAClD,EAAKyB,MAAM3B,MAAME,GAAKuC,SAAQ,SAAAnE,GAAI,OAAIwE,EAASC,KAAKzE,MACpD,EAAKoD,SAAS,CAACmB,cAAeC,IAGhC,EAAKpB,SAAS,CAAC5B,aAAc,MAnGjB,EAsGdgB,QAAU,WACR,IAAMkC,EAAOC,OAAO,iCAER,KAATD,GAAwB,OAATA,GAChB,EAAKtB,SAAS,CACZ1B,MAAM,eACD,EAAK2B,MAAM3B,MADX,eAEFgD,EAAKlB,cAAgB,OAEvB,kBAAMV,aAAaW,QAAQ,QAAST,KAAKU,UAAU,EAAKL,MAAM3B,YA/GvD,EAmHdD,WAAa,WACX,EAAK2B,SAAS,CAACmB,cAAe,YACvB,EAAKlB,MAAM3B,MAAM,EAAK2B,MAAM7B,aAAagC,eAEhDV,aAAaW,QAAQ,QAAST,KAAKU,UAAU,EAAKL,MAAM3B,QACxD,EAAKa,eACL,EAAKqC,iBAzHO,EA6HdC,iBAAmB,WACjB,IAAMC,EAAa,EAAKzB,MAAMkB,cAAcH,QAAO,SAAApE,GAAI,OAAIA,EAAKA,KAAKwD,cAAcuB,SAAS,EAAK1B,MAAM/B,aAAakC,kBAEpH,EAAKJ,SAAS,CAACmB,cAAeO,KAhIlB,EAmIdE,mBAAqB,SAACC,EAAWC,GAC5B,EAAK7B,MAAM/B,eAAiB4D,EAAU5D,eACR,KAA5B,EAAK+B,MAAM/B,aAEZ,EAAKuD,mBAEL,EAAKtC,gBAMN,EAAKc,MAAM3B,QAAUwD,EAAUxD,QAGhC,EAAK0B,SAAS,CAACmB,cAAe,EAAKlB,MAAM3B,MAAM,EAAK2B,MAAM7B,aAAagC,iBAEvE,EAAKoB,kBApJK,EAwJdA,cAAgB,WAGd,IAFA,IAAIO,EAAe,GADC,iBAKdC,EALc,uBAKIC,MAAM,KAC5BD,EAAYjB,SAAQ,SAACmB,EAAQ3C,GAAT,OAAmByC,EAAYzC,GAAS2C,EAAO,GAAGC,cAAgBD,EAAOE,MAAM,MACnGJ,EAAcA,EAAYK,KAAK,KAE/BN,EAAaV,KAAKW,IANpB,MAAiBnB,OAAOC,QAAQ,EAAKb,MAAM3B,OAA3C,eAAmD,IAUnD,EAAK0B,SAAS,CAACX,WAAY0C,KAnK3B,EAAK9B,MAAQ,CACX3B,MAAOmB,GAA0B,GACjC9B,QAAS,CACPf,KAAM,GACNH,GAAI8D,KAAKC,MACTxD,WAAW,GAEbkB,aAAc,GACdiD,cAAe,GACf/C,aAAc,GACdiB,WAAY,IAZF,E,iFAyKZ3C,KAAKyC,eACLzC,KAAK8E,kB,+BAKL,OACE,yBAAK/E,GAAK,iBACR,kBAAC,EAAD,CACEyB,aAAgBxB,KAAKuD,MAAM/B,aAC3BgB,kBAAqBxC,KAAKwC,kBAC1BM,WAAc9C,KAAK8C,WACnBL,aAAgBzC,KAAKyC,aACrBE,WAAc3C,KAAKuD,MAAMZ,WACzBD,QAAW1C,KAAK0C,UAGlB,yBAAKrC,UAAY,mBACf,kBAAC,EAAD,CAAUuB,MAAS5B,KAAKuD,MAAMkB,cAC5B/C,aAAgB1B,KAAKuD,MAAM7B,aAC3BK,gBAAmB/B,KAAK+B,gBACxBP,aAAgBxB,KAAKuD,MAAM/B,aAC3BP,QAAWjB,KAAKuD,MAAMtC,QACtBE,cAAiBnB,KAAKmB,cACtBL,QAAWd,KAAKc,QAChBQ,eAAkBtB,KAAKsB,eACvBK,WAAc3B,KAAK2B,mB,GAvMbpB,IAAMC,W,MCCxBoF,IAAQC,IAAIC,IAAKC,KAEjBC,IAASC,OAAO,kBAAC,EAAD,MAAS7D,SAAS8D,eAAe,W","file":"static/js/main.88aafb38.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Todo.css\";\n\nexport default class Todo extends React.Component {\n    render() {\n        return (\n            <li id={this.props.task.id} onDoubleClick={this.props.doubleClick} className={this.props.task.completed ? \"completed\" : null}>{this.props.task.task}</li>\n        );\n    }\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Form = styled.form`\n  input {\n    background: none;\n    border: 1px solid #888;\n    padding: 4px;\n    color: #ddd;\n\n    &::placeholder {\n      color: #ddd;\n    }\n\n    &:focus {\n      outline: none;\n      border: 1px inset #888;\n      background: #777;\n    }\n  }\n\n  button {\n    background: #444;\n    border: 1px outset #777;\n    border-radius: 4px;\n    color: #aaa;\n    cursor: pointer;\n    font-size: 14px;\n\n    &:active {\n      border: 1px inset #777;\n    }\n  }\n`;\n\nexport default class TodoForm extends React.Component {\n\n    render() {\n        return (\n            <Form onSubmit={this.props.addTask}>\n                <input\n                    id=\"task\"\n                    type=\"text\"\n                    value={this.props.newTask.task}\n                    onChange={this.props.changeHandler}\n                    placeholder=\"Enter new task\"\n                />\n\n                {\" \"}<button type=\"submit\">+</button>{\" \"}\n                <button onClick={this.props.clearCompleted}>\n                    Clear Completed\n        </button>\n            </Form>\n        );\n    }\n}","// your components will all go in this `component` directory.\n// feel free to change this component.js into TodoList.js\nimport React from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\n\nexport default class TodoList extends React.Component {\n    render() {\n        return (\n            <div className=\"todoList\">\n\n                {this.props.searchString.length > 0 ? <h2>Results for: \"{this.props.searchString}\"</h2> : null}\n\n                <div className=\"tasks-header\">\n                    <h3>Tasks:</h3>\n                    {this.props.selectedList !== \"\" ?\n                        <TodoForm\n                            newTask={this.props.newTask}\n                            changeHandler={this.props.changeHandler}\n                            addTask={this.props.addTask}\n                            clearCompleted={this.props.clearCompleted}\n                        /> : null\n                    }\n                </div>\n\n                <h4>\n                    {this.props.selectedList !== \"\" ? this.props.selectedList : \"All Tasks\"}:\n                    {this.props.selectedList !== \"\" ? <button onClick={this.props.deleteList}>Delete List</button> : null}\n                </h4>\n\n                {this.props.tasks ? this.props.tasks.map(task => (\n                    <Todo\n                        key={task.id}\n                        task={task}\n                        doubleClick={this.props.doubleClickTask}\n                    />\n                )) : null}\n\n\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Sidebar = styled.div`\n  \n  width: 20%;\n  min-width: 250px;\n  height: 100vh;\n  background: #888;\n  padding: 15px;\n  border-right: 1px outset #999;\n  color: #ddd;\n  font-size: 20px;\n  overflow-y: auto;\n\n  h2 {\n    margin: 0;\n    padding: 0;\n    color: gold;\n  }\n\n  h3 {\n    text-decoration: underline;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  button {\n    border-radius: 6px;\n    background: #666;\n    color: #aaa;\n    border: 1px outset #888;\n    padding: 0 6px;\n    cursor: pointer;\n\n    &:active {\n      border: 1px inset #888;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .searchContainer {\n    margin-top: 20px;\n    width: 100%;\n\n    label {\n      background: #aaa;\n      border: 1px inset #999;\n      padding: 4px 5px;\n      border-radius: 4px;\n      color: #ddd;\n\n      input {\n        border: none;\n        width: 80%;\n        background: none;\n        color: #ddd;\n        font-size: 14px;\n\n        &::placeholder {\n          color: #ddd;\n          font-size: 14px;\n        }\n\n        &:focus {\n          outline: none;\n        }\n      }\n    }\n  }\n\n  .lists {\n    margin-top: 20px;\n\n    li {\n      cursor: pointer;\n      list-style: none;\n      line-height: 1.5;\n\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n\n  .showAll {\n    margin-top: 20px;\n    border: none;\n    padding: 14px 12px;\n    border-radius: 6px;\n    background: #666;\n    color: #aaa;\n    font-size: 16px;\n    cursor: pointer;\n\n    &:hover {\n      border: 1px inset #888;\n      margin-top: 18px;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nexport default class SideBar extends React.Component {\n    render() {\n        return (\n            <Sidebar>\n                <h2>Reminders</h2>\n\n                <div className=\"searchContainer\">\n                    <label htmlFor=\"search\" onClick={() => document.querySelector(\"#search\").click()}>\n                        {/* <span role = \"img\" aria-label = \"magnifier\">&#128269;</span> */}\n                        <FontAwesomeIcon icon=\"search\" />{\" \"}\n                        <input id=\"search\" type=\"text\" value={this.props.searchString} placeholder=\"Search\" onChange={this.props.searchInputChange} />\n                    </label>\n                </div>\n\n                <button className=\"showAll\" onClick={this.props.showAllTasks}>All Tasks </button>\n\n                <div className=\"lists\">\n                    <h3>To Do Lists: <button onClick={this.props.newList}><FontAwesomeIcon icon=\"plus\" /></button></h3>\n                    {this.props.tasksLists.map((list, index) => (\n                        <li key={index} onClick={this.props.selectList}>\n                            {list}\n                        </li>\n                    ))}\n                </div>\n\n\n\n            </Sidebar>\n        );\n    }\n}","import React from 'react';\nimport TodoList from \"./components/TodoList\";\nimport SideBar from \"./components/SideBar\";\n\n//localStorage.setItem(\"tasks\", \"\");\nconst savedTasks = localStorage.getItem(\"tasks\") ? JSON.parse(localStorage.getItem(\"tasks\")) : null;\n\nclass App extends React.Component {\n  // you will need a place to store your state in this component.\n  // design `App` to be the parent component of your application.\n  // this component is going to take care of state, and any change handlers you need to work with your state\n  constructor() {\n    super();\n    this.state = {\n      tasks: savedTasks ? savedTasks : {},\n      newTask: {\n        task: \"\",\n        id: Date.now(),\n        completed: false\n      },\n      searchString: \"\",\n      searchResults: [],\n      selectedList: \"\", \n      tasksLists: []\n    }\n  }\n\n  changeHandler = e => {\n    this.setState({\n      newTask: \n      {...this.state.newTask, \n        task: e.target.value\n      }\n    });\n  }\n\n  addTask = e => {\n    e.preventDefault();\n\n    if(this.state.newTask.task !== \"\") {\n    \n      if(this.state.selectedList !== \"\"){\n        this.setState({\n          tasks: \n          {\n            ...this.state.tasks,\n            [this.state.selectedList.toLowerCase()]:\n            [...this.state.tasks[this.state.selectedList.toLowerCase()], this.state.newTask]\n          }\n        }, () => localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks)));\n        \n        this.setState({newTask: {\n          task: \"\",\n          id: Date.now(),\n          completed: false\n        }});\n      } \n    }\n  }\n\n  doubleClickTask = e => {\n    \n    e.target.classList.toggle(\"completed\");\n\n    const targetId = Number(e.target.id);\n    \n\n    for (let [, value] of Object.entries(this.state.tasks)) {\n      value.forEach(task => {\n        if(task.id === targetId) {\n          task.completed = !task.completed;\n        }\n      })\n    }\n\n    localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks));\n    \n  }\n\n  clearCompleted = e => {\n    e.preventDefault();\n\n    this.setState({\n      tasks: {\n          ...this.state.tasks,\n          [this.state.selectedList.toLowerCase()]:\n          this.state.tasks[this.state.selectedList.toLowerCase()].filter(task => !task.completed)\n      }\n    }, () => localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks)));\n  }\n  \n  searchInputChange = e => {\n    this.setState({searchString: e.target.value});\n    this.showAllTasks();\n  }\n\n  selectList = e => {\n    const selected = e.target.textContent;\n    this.setState({selectedList: selected});\n    this.setState({searchResults: this.state.tasks[selected.toLowerCase()]})\n  }\n\n  showAllTasks = () => {\n    const allTasks = [];\n    \n    for (let [key] of Object.entries(this.state.tasks)) {\n      this.state.tasks[key].forEach(task => allTasks.push(task))\n      this.setState({searchResults: allTasks})\n    }\n\n    this.setState({selectedList: \"\"});\n  }\n\n  newList = () => {\n    const name = prompt(\"Enter a name for the new list\");\n\n    if(name !== \"\" && name !== null){\n      this.setState({\n        tasks: {\n          ...this.state.tasks,\n          [name.toLowerCase()]: []\n        } \n      }, () => localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks)));\n    }\n  }\n  \n  deleteList = () => {\n    this.setState({searchResults: []})\n    delete this.state.tasks[this.state.selectedList.toLowerCase()];\n\n    localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks));\n    this.showAllTasks();\n    this.getTasksLists();\n\n  }\n\n  getSearchResults = () => {\n    const newResults = this.state.searchResults.filter(task => task.task.toLowerCase().includes(this.state.searchString.toLowerCase()));\n\n    this.setState({searchResults: newResults});\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if(this.state.searchString !== prevState.searchString) {\n      if(this.state.searchString !== \"\"){\n\n        this.getSearchResults()\n      } else {\n        this.showAllTasks();\n      }\n    }     \n      \n    \n\n    if(this.state.tasks !== prevState.tasks) {\n\n\n      this.setState({searchResults: this.state.tasks[this.state.selectedList.toLowerCase()]})\n      \n      this.getTasksLists();\n    }\n  }\n\n  getTasksLists = () => {\n    let newTasksList = [];\n\n    for(let [key] of Object.entries(this.state.tasks)){\n\n      let stringArray = key.split(\" \");\n      stringArray.forEach((string, index) => stringArray[index] = string[0].toUpperCase() + string.slice(1));\n      stringArray = stringArray.join(\" \");\n\n      newTasksList.push(stringArray);\n      \n    }\n    \n    this.setState({tasksLists: newTasksList});\n  }\n\n  componentDidMount() {\n    this.showAllTasks();\n    this.getTasksLists();    \n  }\n\n  render() {\n\n    return (\n      <div id = \"app-container\">\n        <SideBar \n          searchString = {this.state.searchString}\n          searchInputChange = {this.searchInputChange}\n          selectList = {this.selectList}\n          showAllTasks = {this.showAllTasks}\n          tasksLists = {this.state.tasksLists}\n          newList = {this.newList}\n        />\n        \n        <div className = \"tasks-container\">\n          <TodoList tasks = {this.state.searchResults} \n            selectedList = {this.state.selectedList}\n            doubleClickTask = {this.doubleClickTask}\n            searchString = {this.state.searchString}\n            newTask = {this.state.newTask} \n            changeHandler = {this.changeHandler} \n            addTask = {this.addTask} \n            clearCompleted = {this.clearCompleted}\n            deleteList = {this.deleteList}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport App from './App';\nimport \"./index.css\";\n\nlibrary.add(fab, fas);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}