{"ast":null,"code":"import _classCallCheck from\"/Users/calvarezberrios/Desktop/LambdaSchool/Projects/React-Todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/calvarezberrios/Desktop/LambdaSchool/Projects/React-Todo/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/calvarezberrios/Desktop/LambdaSchool/Projects/React-Todo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/calvarezberrios/Desktop/LambdaSchool/Projects/React-Todo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/calvarezberrios/Desktop/LambdaSchool/Projects/React-Todo/node_modules/@babel/runtime/helpers/esm/inherits\";import _taggedTemplateLiteral from\"/Users/calvarezberrios/Desktop/LambdaSchool/Projects/React-Todo/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  input {\\n    background: none;\\n    border: 1px solid #888;\\n    padding: 4px;\\n    color: #ddd;\\n\\n    &::placeholder {\\n      color: #ddd;\\n    }\\n\\n    &:focus {\\n      outline: none;\\n      border: 1px inset #888;\\n      background: #777;\\n    }\\n  }\\n\\n  button {\\n    background: #444;\\n    border: 1px outset #777;\\n    border-radius: 4px;\\n    color: #aaa;\\n    cursor: pointer;\\n    font-size: 14px;\\n\\n    &:active {\\n      border: 1px inset #777;\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";var Form=styled.form(_templateObject());var TodoForm=/*#__PURE__*/function(_React$Component){_inherits(TodoForm,_React$Component);function TodoForm(){_classCallCheck(this,TodoForm);return _possibleConstructorReturn(this,_getPrototypeOf(TodoForm).apply(this,arguments));}_createClass(TodoForm,[{key:\"render\",value:function render(){return React.createElement(Form,{onSubmit:this.props.addTask},React.createElement(\"input\",{id:\"task\",type:\"text\",value:this.props.newTask.task,onChange:this.props.changeHandler,placeholder:\"Enter new task\"}),\" \",React.createElement(\"button\",{type:\"submit\"},\"+\"),\" \",React.createElement(\"button\",{onClick:this.props.clearCompleted},\"Clear Completed\"));}}]);return TodoForm;}(React.Component);export{TodoForm as default};","map":{"version":3,"sources":["/Users/calvarezberrios/Desktop/LambdaSchool/Projects/React-Todo/src/components/TodoForm.js"],"names":["React","styled","Form","form","TodoForm","props","addTask","newTask","task","changeHandler","clearCompleted","Component"],"mappings":"4+CAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,GAAMC,CAAAA,IAAI,CAAGD,MAAM,CAACE,IAAV,mBAAV,C,GAgCqBC,CAAAA,Q,sRAER,CACL,MACI,qBAAC,IAAD,EAAM,QAAQ,CAAE,KAAKC,KAAL,CAAWC,OAA3B,EACI,6BACI,EAAE,CAAC,MADP,CAEI,IAAI,CAAC,MAFT,CAGI,KAAK,CAAE,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,IAH9B,CAII,QAAQ,CAAE,KAAKH,KAAL,CAAWI,aAJzB,CAKI,WAAW,CAAC,gBALhB,EADJ,CASK,GATL,CASS,8BAAQ,IAAI,CAAC,QAAb,MATT,CAS0C,GAT1C,CAUI,8BAAQ,OAAO,CAAE,KAAKJ,KAAL,CAAWK,cAA5B,oBAVJ,CADJ,CAgBH,C,sBAnBiCV,KAAK,CAACW,S,SAAvBP,Q","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Form = styled.form`\n  input {\n    background: none;\n    border: 1px solid #888;\n    padding: 4px;\n    color: #ddd;\n\n    &::placeholder {\n      color: #ddd;\n    }\n\n    &:focus {\n      outline: none;\n      border: 1px inset #888;\n      background: #777;\n    }\n  }\n\n  button {\n    background: #444;\n    border: 1px outset #777;\n    border-radius: 4px;\n    color: #aaa;\n    cursor: pointer;\n    font-size: 14px;\n\n    &:active {\n      border: 1px inset #777;\n    }\n  }\n`;\n\nexport default class TodoForm extends React.Component {\n\n    render() {\n        return (\n            <Form onSubmit={this.props.addTask}>\n                <input\n                    id=\"task\"\n                    type=\"text\"\n                    value={this.props.newTask.task}\n                    onChange={this.props.changeHandler}\n                    placeholder=\"Enter new task\"\n                />\n\n                {\" \"}<button type=\"submit\">+</button>{\" \"}\n                <button onClick={this.props.clearCompleted}>\n                    Clear Completed\n        </button>\n            </Form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}